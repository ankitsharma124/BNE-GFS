# Build output
[Bb]in/
[Oo]bj/
[Oo]ut/
*/[Bb]in/
*/[Oo]bj/
*/[Oo]ut/

# cache for misc downloads
artifacts/

# dotnet install directory
.dotnet/

# Master Seed directory
Sample/ShopInFoAccess/Csv/
Sample/ShopInFoAccess/Json/
Sample/ShopInFoAccess/data/
Sample/ShopInFoAccess/Json/

# UnitTest
data/

UploadedFiles/

 # Visual Studio 2015 cache/options directory
.vs/
.vs/*

# Visual Studio Code cache/options directory
.vscode/

# Visual Studio debug profile
**/launchSettings.json

# Test files
*.trx

# User-specific files
*.suo
*.user

# ImageBuilder directory
.Microsoft.DotNet.ImageBuilder

#Notepad++ backup files
*.bak

.env


## Terraform ignore patterns.
#
# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

terraform/.terraform/modules/

*.tfplan
