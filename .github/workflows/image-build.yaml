name: Container Build and Push

on:
  push:
    branches:
      - develop
      - feat/gha-image-build
    tags:
      - 'v*'

env:
  IMAGE: ${{ secrets.IMAGE_PREFIX }}/corebridge
  TAG: latest
  GOOGLE_IAM_WORKLOAD_IDENTITY_POOL_PROVIDER: ${{ secrets.GOOGLE_IAM_WORKLOAD_IDENTITY_POOL_PROVIDER }}
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}


jobs:
  build-push-corebridge:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ env.GOOGLE_IAM_WORKLOAD_IDENTITY_POOL_PROVIDER }}"
          service_account: "${{ env.SERVICE_ACCOUNT_EMAIL }}"
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Use gcloud CLI
        run: gcloud info
      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ secrets.REGISTRY_HOST }}
      - name: Build a docker image
        run: docker build -t ${{ env.IMAGE }}:${{ env.TAG }} -f ./CoreBridge/Dockerfile .
      - name: Push the docker image
        run: docker push ${{ env.IMAGE }}:${{ env.TAG }}

      #- uses: docker/setup-buildx-action@v2
      #- uses: docker/build-push-action@v3
      #  with:
      #    context: '.'
      #    file: './CoreBridge/Dockerfile'
      #    push: true
      #    tags: |
      #      ${{ inputs.ecr_registry }}/${{ inputs.ecr_repository }}:${{ github.sha }}
      #      ${{ inputs.ecr_registry }}/${{ inputs.ecr_repository }}:${{ github.ref_name }}
      #    cache-from: type=gha
      #    cache-to: type=gha,mode=max


      #- name: Clean up Container images
      #  run: |
      #    gcloud container images list-tags "${IMAGE}" \
      #      --filter="NOT tags:${TAG}" --format="get(digest)" | \
      #    while read digest
      #    do
      #      gcloud container images delete -q --force-delete-tags "${IMAGE}@$digest"
      #    done
