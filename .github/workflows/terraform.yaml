# NOTE:
#  If you want to run this action again, enable manually from below.
# https://github.com/scopenext/BNE-GFS/actions/workflows/

## Refs: https://learn.hashicorp.com/tutorials/terraform/github-actions
#name: terraform
#
#on:
#  push:
#    branches:
#      - develop
#  pull_request:
#
#env:
#  GOOGLE_IAM_WORKLOAD_IDENTITY_POOL_PROVIDER: ${{ secrets.GOOGLE_IAM_WORKLOAD_IDENTITY_POOL_PROVIDER }}
#  SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
#
#jobs:
#  terraform:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: 'read'
#      id-token: 'write'
#      pull-requests: 'write'
#    steps:
#      - uses: actions/checkout@v3
#
#      - id: auth
#        uses: google-github-actions/auth@v1
#        with:
#          workload_identity_provider: "${{ env.GOOGLE_IAM_WORKLOAD_IDENTITY_POOL_PROVIDER }}"
#          service_account: "${{ env.SERVICE_ACCOUNT_EMAIL }}"
#
#      - uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.2.2
#
#      - name: Terraform Init
#        id: init
#        working-directory: ./terraform
#        run: terraform init
#
#      - name: Terraform fmt
#        id: fmt
#        working-directory: ./terraform
#        run: terraform fmt -check
#        continue-on-error: true
#
#      - name: Terraform Validate
#        id: validate
#        working-directory: ./terraform
#        run: terraform validate -no-color
#
#      - name: Terraform Plan
#        id: plan
#        working-directory: ./terraform
#        run: terraform plan -no-color
#        if: github.event_name == 'pull_request'
#        continue-on-error: true
#
#      - name: Update Pull Request
#        uses: actions/github-script@v6
#        if: github.event_name == 'pull_request'
#        env:
#          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
#            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#
#            <details><summary>Show Plan</summary>
#
#            \`\`\`\n
#            ${process.env.PLAN}
#            \`\`\`
#
#            </details>
#
#            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
#
#            github.rest.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })
#
#      - name: Terraform Apply
#        id: apply
#        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#        working-directory: ./dev
#        run: terraform apply -auto-approve -input=false
#
